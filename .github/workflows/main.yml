name: Build repo

on:
  push:
    branches: [ "gh-pages" ]

  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    container:
      image: archlinux:latest
    steps:
      - uses: actions/checkout@v3
        with:
          ref: 'gh-pages'
          fetch-depth: 1000

      - name: Import GPG key
        if: always() && github.event_name != 'pull_request'
        uses: crazy-max/ghaction-import-gpg@v4
        with:
          gpg_private_key: ${{ secrets.GPG_SECRET }}
          passphrase: ${{ secrets.GPG_PASSPHRASE }}
          
      - name: Update Database x86-64
        if: always() && github.event_name != 'pull_request'
        run: |
          repo-add x86_64/cheetah-aur.db.tar.gz x86_64/*.pkg.tar.xz

      - name: Sign repo
        env:
          gpg_key: ${{ secrets.GPG_KEY }}
        run: |
          for file in ./x86_64/*.db*
          do
            gpg --detach-sign --use-agent --default-key "${gpg_key}" --batch --yes "${file}"
          done
          
          for file in ./x86_64/*.files*
          do
            gpg --detach-sign --use-agent --default-key "${gpg_key}" --batch --yes "${file}"
          done

      - name: Install git
        run: |
          pacman -Syu --noconfirm git

      - name: Update Database x86-64-v3
        if: always() && github.event_name != 'pull_request'
        run: |
          repo-add x86_64-v3/cheetah-aur.db.tar.gz x86_64-v3/*.pkg.tar.xz
      
      - name: Sign repo
        env:
          gpg_key: ${{ secrets.GPG_KEY }}
        run: |
          for file in ./x86_64-v3/*.db*
          do
            gpg --detach-sign --use-agent --default-key "${gpg_key}" --batch --yes "${file}"
          done
          
          for file in ./x86_64-v3/*.files*
          do
            gpg --detach-sign --use-agent --default-key "${gpg_key}" --batch --yes "${file}"
          done
     
     
      - name: Commit 
        run: |
          git config --global user.name "Cheetah-aur-bot"
          git config --global user.email "Cheetah-aur@proton.me"
          git add .
          git commit -m "Update repo"
          git push
